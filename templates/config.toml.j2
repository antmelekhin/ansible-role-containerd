{{ ansible_managed | comment }}

version = 2
root = "{{ containerd_root_path }}"
state = "{{ containerd_state_path }}"
oom_score = {{ containerd_oom_score }}

[debug]
  level = "{{ containerd_debug_level }}"

[grpc]
  address = "{{ containerd_state_path }}/containerd.sock"
  max_recv_message_size = {{ containerd_grpc_max_recv_message_size }}
  max_send_message_size = {{ containerd_grpc_max_send_message_size }}

[metrics]
  address = "{{ containerd_metrics_address }}"
  grpc_histogram = {{ containerd_metrics_grpc_histogram | lower }}

[plugins]
  [plugins."io.containerd.grpc.v1.cri"]
    max_concurrent_downloads = {{ containerd_max_concurrent_downloads }}
    max_container_log_line_size = {{ containerd_max_container_log_line_size }}
    sandbox_image = "{{ containerd_sandbox_image }}"

    [plugins."io.containerd.grpc.v1.cri".cni]
      bin_dir = "{{ containerd_cni_bin_dir }}"
      conf_dir = "{{ containerd_cni_conf_dir }}"

    [plugins."io.containerd.grpc.v1.cri".containerd]
      default_runtime_name = "{{ containerd_default_runtime_name }}"
      snapshotter = "{{ containerd_snapshotter }}"

      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
{% for runtime in containerd_runtimes %}
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.{{ runtime['name'] }}]
          runtime_type = "{{ runtime['type'] }}"
          runtime_engine = "{{ runtime['engine'] }}"
          runtime_root = "{{ runtime['root'] }}"

          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.{{ runtime['name'] }}.options]
{%   for key, value in runtime['options'].items() %}
{%     if value | bool %}
            {{ key }} = {{ value | lower }}
{%     else %}
            {{ key }} = "{{ value }}"
{%     endif %}
{%   endfor %}
{% endfor %}

    [plugins."io.containerd.grpc.v1.cri".image_decryption]
      key_model = "node"

    [plugins."io.containerd.grpc.v1.cri".registry]
{% if containerd_registries_mirrors | length %}
      config_path = "{{ containerd_config_path }}/certs.d"
{% endif %}

      [plugins."io.containerd.grpc.v1.cri".registry.configs]
{% for registry in containerd_registries_auth if registry['registry'] is defined %}
{%   if (registry['username'] is defined and registry['password'] is defined) or registry['auth'] is defined %}
        [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ registry['registry'] }}".auth]
{%     if registry['username'] is defined and registry['password'] is defined %}
          username = "{{ registry['username'] }}"
          password = "{{ registry['password'] }}"
{%     else %}
          auth = "{{ registry['auth'] }}"
{%     endif %}
{%   endif %}
{% endfor %}
