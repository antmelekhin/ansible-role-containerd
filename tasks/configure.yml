---
- name: 'Configure and start Containerd'
  become: true
  block:
    - name: 'Configure Containerd'
      ansible.builtin.template:
        src: 'config.toml.j2'
        dest: '{{ containerd_config_path }}/config.toml'
        owner: 'root'
        group: 'root'
        mode: 0640
      notify: 'Restart Containerd'

    - name: 'Configure Containerd registries'
      when: containerd_registries_mirrors | length
      block:
        - name: 'Create registry directories'
          ansible.builtin.file:
            path: '{{ containerd_config_path }}/certs.d/{{ containerd_registry.namespace }}'
            owner: 'root'
            group: 'root'
            mode: 0755
            state: 'directory'
          loop: '{{ containerd_registries_mirrors }}'
          loop_control:
            loop_var: containerd_registry

        - name: 'Configure registry hosts'
          ansible.builtin.template:
            src: 'hosts.toml.j2'
            dest: '{{ containerd_config_path }}/certs.d/{{ containerd_registry.namespace }}/hosts.toml'
            owner: 'root'
            group: 'root'
            mode: 0640
          loop: '{{ containerd_registries_mirrors }}'
          loop_control:
            loop_var: containerd_registry

    - name: 'Find unused registry directories'
      ansible.builtin.find:
        paths: '{{ containerd_config_path }}/certs.d'
        file_type: 'directory'
        excludes: "{{ containerd_registries_mirrors | map(attribute='namespace') }}"
      register: __containerd_unused_registry_directories

    - name: 'Remove unused registry directories'
      ansible.builtin.file:
        path: '{{ item }}'
        state: 'absent'
      loop: "{{ __containerd_unused_registry_directories.files | map(attribute='path') }}"

    - name: 'Ensure Containerd is running and enabled at boot'
      ansible.builtin.systemd:
        name: 'containerd'
        state: 'started'
        enabled: true
      when: not ansible_check_mode
